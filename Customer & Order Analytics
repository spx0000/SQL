--How many orders were placed in January?

SELECT COUNT(orderID) AS NumberOfOrders
FROM BIT_DB.JanSales
--This is used to clean up any messy entries in the table
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

--How many of those orders were for an iPhone?

SELECT COUNT(orderID) AS NumberOfOrders
FROM BIT_DB.JanSales
--This is used to clean up any messy entries in the table
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND Product = 'iPhone';

--Select the customer account numbers for all the orders that were placed in February

SELECT DISTINCT acctnum
FROM BIT_DB.customers
INNER JOIN BIT_DB.FebSales 
ON customers.order_id = FebSales.orderID
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

--Which product was the cheapest one sold in January, and what was the price?

SELECT distinct product, MIN(price)
FROM BIT_DB.JanSales
GROUP BY product, price
ORDER BY price ASC LIMIT 1;

--What is the total revenue for each product sold in January?

SELECT DISTINCT product, SUM(quantity)*price AS Revenue
FROM BIT_DB.JanSales
WHERE product <> ' '
AND product IS NOT NULL
AND product <> 'Product'
GROUP BY product;

--Which products were sold in February at 548 Lincoln St, Seatlle, WA 98101, how many 
--of each were sold, and what was the total revenue?

SELECT product, SUM(quantity) AS Quantity, SUM(quantity)*price AS Revenue
FROM BIT_DB.FebSales
WHERE product <> ' '
AND product IS NOT NULL
AND product <> 'Product'
AND location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

--How many customers ordered more than 2 products at a time in February, and what was 
--the average amount spent for those customers?

SELECT COUNT(*), AVG(Quantity*price)
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.customers

--List all the products sold in Los Angeles in February, and include how many of each were sold

SELECT distinct Product, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product;
ON FebSales.orderID = customers.order_id
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND FebSales.Quantity > 2;

--Which locations in New York received at least 3 orders in January,
--and how many orders did they each receive?

SELECT DISTINCT location, COUNT(orderID)
FROM BIT_DB.JanSales
WHERE location like '%NY%'
AND length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY location
HAVING COUNT(orderID) >= 3;

--How many of each type of headphone were sold in February?

SELECT Product, SUM(Quantity)
FROM BIT_DB.FebSales
WHERE Product like '%Headphones%'
GROUP BY Product;

-- What was the average amount spent per account in February?
--(we want the average amount spent / number of accounts, not the amount spent by each account.)

SELECT SUM(Quantity*price)/COUNT(customers.acctnum) AS AverageSpentPerAcctInFeb
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.customers
ON BIT_DB.FebSales.orderID = BIT_DB.customers.order_id
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

--What was the average quantity of products purchased per account in February?
--(we want the overall average, not the average for each account individually)

SELECT SUM(Quantity)/COUNT(customers.acctnum) AS AverageQuantityInFeb
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.customers
ON BIT_DB.FebSales.orderID = BIT_DB.customers.order_id
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

--Which product brought in the most revenue in January and how much
--revenue did it bring in total?

SELECT Product, SUM(Quantity*price) AS Revenue
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY SUM(Quantity*price) DESC LIMIT 1;
